<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Circuit Breaker Pattern on Ugur's Personal Documentation</title><link>https://blog.ugurelveren.com/tags/circuit-breaker-pattern/</link><description>Recent content in Circuit Breaker Pattern on Ugur's Personal Documentation</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 29 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ugurelveren.com/tags/circuit-breaker-pattern/index.xml" rel="self" type="application/rss+xml"/><item><title>Cloud Design Patterns: Circuit Breaker Pattern</title><link>https://blog.ugurelveren.com/post/circuit-breaker-pattern/</link><pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate><guid>https://blog.ugurelveren.com/post/circuit-breaker-pattern/</guid><description>&lt;p>The circuit breaker pattern stops a service from trying again to call another service when the previous attempts have failed multiple times. It&amp;rsquo;s similar to electrical circuit breakers that automatically cut off the current when there&amp;rsquo;s abnormal activity.&lt;/p>
&lt;p>In a distributed environment, calls to remote resources may fail due to reasons such as application exceptions, timeouts, authentication issues, or overloaded systems. Usually, resilient cloud applications automatically fix these issues over time, and the calling application manages these errors using a retry pattern.&lt;/p></description></item></channel></rss>